// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
// import 'package:flutter/foundation.dart'
// show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    return const FirebaseOptions(
      apiKey: String.fromEnvironment('FIREBASE_API_KEY'),
      appId: String.fromEnvironment('FIREBASE_APP_ID'),
      messagingSenderId: String.fromEnvironment('FIREBASE_MESSAGING_SENDER_ID'),
      projectId: String.fromEnvironment('FIREBASE_PROJECT_ID'),
      storageBucket: String.fromEnvironment('FIREBASE_STORAGE_BUCKET'),
      authDomain: String.fromEnvironment('FIREBASE_AUTH_DOMAIN'),
      iosClientId: String.fromEnvironment('FIREBASE_IOS_CLIENT_ID'),
      iosBundleId: String.fromEnvironment('FIREBASE_IOS_BUNDLE_ID'),
      androidClientId: String.fromEnvironment('FIREBASE_ANDRIOD_CLIENT_ID'),
      measurementId: String.fromEnvironment('FIREBASE_MEASUREMENT_ID'),
    );
    // if (kIsWeb) {
    //   return web;
    // }
    // switch (defaultTargetPlatform) {
    //   case TargetPlatform.android:
    //     return android;
    //   case TargetPlatform.iOS:
    //     return ios;
    //   case TargetPlatform.macOS:
    //     return macos;
    //   case TargetPlatform.windows:
    //     return windows;
    //   case TargetPlatform.linux:
    //     throw UnsupportedError(
    //       'DefaultFirebaseOptions have not been configured for linux - '
    //       'you can reconfigure this by running the FlutterFire CLI again.',
    //     );
    //   default:
    //     throw UnsupportedError(
    //       'DefaultFirebaseOptions are not supported for this platform.',
    //     );
    // }
  }
}
